name: Build Go Engine & Create Release Assets

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - os: windows-latest
            goos: windows
            goarch: amd64
            arch_name: "64"
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            arch_name: "64"
          - os: macos-latest
            goos: darwin
            goarch: amd64
            arch_name: "64"
          - os: macos-latest
            goos: darwin
            goarch: arm64
            arch_name: "arm64-v8a"

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install Zip tool (for Windows only)
        if: runner.os == 'Windows'
        run: choco install zip

      - name: Install Dependencies
        run: go mod tidy
        working-directory: ./core_engine

      - name: Set output names
        id: set_names
        shell: bash
        run: |
          EXE_NAME="core_engine"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXE_NAME="core_engine.exe"
          fi
          echo "EXE_NAME=$EXE_NAME" >> $GITHUB_ENV
          echo "ZIP_NAME=core_engine-${{ matrix.goos }}-${{ matrix.arch_name }}.zip" >> $GITHUB_ENV

      - name: Build Go Executable
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -v -o ${{ env.EXE_NAME }} main.go
        working-directory: ./core_engine

      - name: Create Zip Archive
        shell: bash
        run: |
          cd core_engine
          zip ${{ env.ZIP_NAME }} ${{ env.EXE_NAME }}
          cd ..
      
      - name: Upload Artifact for Release
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: core_engine/${{ env.ZIP_NAME }}


  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          files: artifacts/**/*.zip
